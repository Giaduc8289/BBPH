<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="uiPanelManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_CHONLOAIMUC.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>